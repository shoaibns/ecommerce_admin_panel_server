// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Admin {
  id String @id @default(uuid())
  fname           String
  lname           String
  email           String    @unique
  emailHash       String?   @unique
  mobileNumber    String
  profilePicture  String?
  city            String?
  country         String?
  password        String
  role            String
  isSuperAdmin    Boolean   @default(false)
  isBlocked       Boolean   @default(false)
  assignedGroupId String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  createdById     String?
  updatedById     String?
  updatedBytype   String?

  @@index([deletedAt])
}

model UserGroup {
  id                String             @id @default(uuid()) @db.Uuid
  name              String
  description       String?
  createdById       String             @db.Uuid
  createdByRole     String?
  isActive          Boolean            @default(true)
  assignedUserCount Int?
  isDeleted         Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  deletedAt         DateTime?

  permissions       ModulePermission[]

  @@unique([name, createdById])
  @@index([isDeleted])
  @@index([isActive])
}

model ModulePermission {
  id          String     @id @default(uuid()) @db.Uuid
  moduleName  String
  read        Boolean    @default(false)
  write       Boolean    @default(false)
  edit        Boolean    @default(false)
  delete      Boolean    @default(false)
  export      Boolean    @default(false)
  userGroupId String     @db.Uuid

  userGroup   UserGroup  @relation(fields: [userGroupId], references: [id])

  @@unique([userGroupId, moduleName])
}